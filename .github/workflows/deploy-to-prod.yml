name: Docker Versioning and Deployment

env: 
  AZURE_CONTAINER_REGISTRY: testregistry170
  AZURE_REPOSITARTY_NAME: zwing-service

on:
  push:
    branches:
      - feature/g1-sso-service

jobs:
  build-version-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash  

    - name: Log in to Azure using service-principal
      uses: azure/login@v1
      with:
         creds: ${{secrets.azure_credentials}} 
      #  creds: ${{secrets.AZURE_CREDENTIAL}}

    - name: Log in to ACR
      run: |
        az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}

    - name: Image Versioning
      id: version
      run: |
        # Get the list of existing tags from ACR
        TAGS=$(az acr repository show-tags --name ${{ env.AZURE_CONTAINER_REGISTRY }} --repository ${{env.AZURE_REPOSITARTY_NAME}} --orderby time_desc --output tsv)
        echo "$TAGS"
        # Extract the latest version number
        LATEST_VERSION=$(echo "$TAGS" | grep '^prod-' | head -n 1 | sed 's/prod-//')
        
        # Increment the version (default to 0.0.1 if no previous version exists)
        if [ -z "$LATEST_VERSION" ]; then
          IMAGE_VERSION="0.0.1"
        else
          IFS='.' read -ra PARTS <<< "$LATEST_VERSION"
          IMAGE_VERSION="${PARTS[0]}.${PARTS[1]}.$((PARTS[2]+1))"
        fi
        
        echo "IMAGE_VERSION=prod-${IMAGE_VERSION}" >> $GITHUB_ENV
        echo "$GITHUB_ENV"

    - name: Build Docker Image
      run: |
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{env.AZURE_REPOSITARTY_NAME}}:${{ env.IMAGE_VERSION}} .

    - name: Push Docker Image to ACR
      run: |
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{env.AZURE_REPOSITARTY_NAME}}:${{ env.IMAGE_VERSION}}

    # - name: Get Image Digest from ACR
    #   id: digest
    #   run: |
    #     IMAGE_DIGEST=$(az acr repository show-manifests --name ${{ env.AZURE_CONTAINER_REGISTRY }} --repository ${{env.AZURE_REPOSITARTY_NAME}} --query "[?tags[?contains(@, '${{ env.IMAGE_VERSION }}')]].digest" -o tsv)
    #     echo "DIGEST=${IMAGE_DIGEST}" >> $GITHUB_ENV
    #     echo "$GITHUB_ENV"
    
    

    
    