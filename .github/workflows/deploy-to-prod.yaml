name: Docker Versioning and Deployment

env: 
  AZURE_CONTAINER_REGISTRY: devops12
on:
  push:
    branches:
       feature/g1-sso-service

jobs:
  build-and-version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIAL }}

    - name: Log in to ACR
      run: |
        az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}

    - name: Image Versioning
      id: version
      run: |
         TAGS=$(az acr repository show-tags --name ${{ env.AZURE_CONTAINER_REGISTRY }} --repository g1-sso-service --orderby time_desc --output tsv)
            if [ -z "$TAGS" ]; then
                echo "Error: No tags found or unable to fetch tags."
                exit 1
            fi

              LATEST_VERSION=$(echo "$TAGS" | grep '^prod-' | head -n 1 | sed 's/prod-//')
              if [ -z "$LATEST_VERSION" ]; then
                NEW_VERSION="0.0.1"
              elif [[ "$LATEST_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                  IFS='.' read -ra VERSION_PARTS <<< "$LATEST_VERSION"
                  NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$((VERSION_PARTS[2]+1))"
              else
                echo "Error: Latest version is not in expected format."
                exit 1
              fi

            echo "NEW_VERSION=prod-${NEW_VERSION}" >> $GITHUB_ENV

    - name: Build Docker Image
      run: |
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/g1-sso-service:${{ env.NEW_VERSION }} .

    - name: Push Docker Image to ACR
      run: |
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/g1-sso-service:${{ env.NEW_VERSION }}

    - name: Get Image Digest from ACR
      id: digest
      run: |
        IMAGE_DIGEST=$(az acr repository show-manifests --name ${{ env.AZURE_CONTAINER_REGISTRY }} --repository g1-sso-service --query "[?tags[?contains(@, '${{ env.NEW_VERSION }}')]].digest" -o tsv)
        echo "DIGEST=${IMAGE_DIGEST}" >> $GITHUB_ENV
        echo "$GITHUB_ENV"
        



    
