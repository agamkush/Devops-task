name: Build, Run, and Deploy

env: 
  AZURE_CONTAINER_REGISTRY: devops12.azurecr.io

on: 
  push: 
    branches: feature/g1-sso-service

jobs:
  deploy-to-prod:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout the code
        uses: actions/checkout@v3

      # Step 2: Login to Azure Container Registry
      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}
          
      - name: "Set IMAGE_VERSION"
        run: |
          echo "IMAGE_VERSION=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV


      # Step 4: Build the Docker image with version tagging
      - name: "Build the Docker Image"
        run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/admin-console:${IMAGE_VERSION} .
          docker tag ${{ env.AZURE_CONTAINER_REGISTRY }}/admin-console:${IMAGE_VERSION} ${{ env.AZURE_CONTAINER_REGISTRY }}/admin-console:latest

      # Step 5: Push the Docker image to Azure Container Registry
      - name: "Push the Docker Image"
        run: |
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/admin-console:${IMAGE_VERSION}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/admin-console:latest



      # Step 3: Build the Docker image
#
      # Step 5: (Optional) Run the Docker container
    #  - name: Run the Docker container
    #    run: |
    #      docker stop testing-container || true
    #      docker rm testing-container || true
    #      docker run -d --name testing-container -p 80:3000 ${{ env.AZURE_CONTAINER_REGISTRY }}/nodejs-app:1.0
